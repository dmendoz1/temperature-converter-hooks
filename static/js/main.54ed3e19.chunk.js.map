{"version":3,"sources":["components/TempInput.js","helpers/convertTemp.js","Calculator.js","index.js"],"names":["TempInput","_ref","scale","onTempChange","temp","react_default","a","createElement","type","value","onChange","e","target","convertTemp","convertFn","parsedNum","parseFloat","Number","isNaN","convertedNum","Math","round","toCelsius","toFahrenheit","Calculator","_","_useState","useState","_useState2","Object","slicedToArray","setTemp","celsius","fahrenheit","className","components_TempInput","ReactDOM","render","src_Calculator","document","getElementById"],"mappings":"8NAoBeA,EAjBG,SAAAC,GAAiC,IAA/BC,EAA+BD,EAA/BC,MAAOC,EAAwBF,EAAxBE,aAAcC,EAAUH,EAAVG,KAKvC,OACEC,EAAAC,EAAAC,cAAA,gBACEF,EAAAC,EAAAC,cAAA,gCAAwBL,GAC1BG,EAAAC,EAAAC,cAAA,SACEC,KAAK,OACLC,MAAOL,EACPM,SAVsB,SAAAC,GACxBR,EAAaQ,EAAEC,OAAOH,YCLnB,SAASI,EAAYT,EAAMU,GAChC,IAAMC,EAAYC,WAAWZ,GAC7B,GAAGa,OAAOC,MAAMH,GACd,MAAO,IAET,IAAMI,EAAeL,EAAUC,GAE/B,OADmBK,KAAKC,MAAqB,IAAfF,GAAuB,IAIhD,SAASG,EAAUlB,GACxB,OAAsB,EAAE,GAAhBA,EAAO,IAGV,SAASmB,EAAanB,GAC3B,OAAY,IAAJA,EAAgB,aC6BXoB,EAvCI,SAAAC,GAAK,IAAAC,EACEC,mBAAS,CAACzB,MAAO,UAAWE,KAAM,KADpCwB,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACftB,EADewB,EAAA,GACTG,EADSH,EAAA,GAGhBI,EAAyB,eAAf5B,EAAKF,MAAyBW,EAAYT,EAAKA,KAAMkB,GAAalB,EAAKA,KACjF6B,EAA4B,YAAf7B,EAAKF,MAAsBW,EAAYT,EAAKA,KAAMmB,GAAgBnB,EAAKA,KAgB1F,OACEC,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,cACb7B,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,+IAEAF,EAAAC,EAAAC,cAAC4B,EAAD,CACEjC,MAAM,UACNE,KAAM4B,EACN7B,aAtBsB,SAAAC,GAC1B2B,EAAQ,CACN7B,MAAO,UACPE,KAAMA,OAqBNC,EAAAC,EAAAC,cAAC4B,EAAD,CACEjC,MAAM,aACNE,KAAM6B,EACN9B,aApByB,SAAAC,GAC7B2B,EAAQ,CACN7B,MAAO,aACPE,KAAMA,SChBZgC,IAASC,OAAOhC,EAAAC,EAAAC,cAAC+B,EAAD,MAAgBC,SAASC,eAAe","file":"static/js/main.54ed3e19.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst TempInput = ({scale, onTempChange, temp}) => {\n  const handleInputChange = e => {\n    onTempChange(e.target.value);\n  }\n\n  return (\n    <fieldset>\n      <legend>Temperature in {scale}</legend>\n    <input\n      type=\"text\"\n      value={temp}\n      onChange={handleInputChange}\n     />\n    </fieldset>\n  )\n}\n\nexport default TempInput;\n","export function convertTemp(temp, convertFn) {\n  const parsedNum = parseFloat(temp);\n  if(Number.isNaN(parsedNum)) {\n    return ' ';\n  }\n  const convertedNum = convertFn(parsedNum);\n  const roundedNum = Math.round(convertedNum * 1000) / 1000;\n  return roundedNum;\n}\n\nexport function toCelsius(temp) {\n  return (temp - 32) * (5/9);\n}\n\nexport function toFahrenheit(temp) {\n  return (temp * (9/5)) + 32;\n}\n","import React, {useState} from 'react';\nimport TempInput from './components/TempInput';\nimport {toCelsius, toFahrenheit, convertTemp} from './helpers/convertTemp';\nimport './App.css';\n\nconst Calculator = _ => {\n  const [temp, setTemp] = useState({scale: 'celsius', temp: ''});\n\n  const celsius = temp.scale === 'fahrenheit' ? convertTemp(temp.temp, toCelsius) : temp.temp;\n  const fahrenheit = temp.scale === 'celsius' ? convertTemp(temp.temp, toFahrenheit) : temp.temp;\n\n  const handleCelciusChange = temp => {\n    setTemp({\n      scale: 'celsius',\n      temp: temp\n    });\n  }\n\n  const handleFahrenheitChange = temp => {\n    setTemp({\n      scale: 'fahrenheit',\n      temp: temp\n    })\n  }\n\n  return (\n    <div className=\"calculator\">\n      <h2>Temperature converter</h2>\n      <p>Enter a temperature value in either Celsius or Fahrenheit to have it automatically\n      converted to the other scale value in real time</p>\n      <TempInput\n        scale='celsius'\n        temp={celsius}\n        onTempChange={handleCelciusChange}\n       />\n      <TempInput\n        scale='fahrenheit'\n        temp={fahrenheit}\n        onTempChange={handleFahrenheitChange}\n      />\n    </div>\n  )\n};\n\nexport default Calculator;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Calculator from './Calculator';\n\nReactDOM.render(<Calculator />, document.getElementById('root'));\n"],"sourceRoot":""}