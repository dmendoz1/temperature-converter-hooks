{"ast":null,"code":"import _slicedToArray from \"/Users/dmendoza/Documents/react-projects/temperature-converter-hooks/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dmendoza/Documents/react-projects/temperature-converter-hooks/src/Calculator.js\";\nimport React, { useState } from 'react';\nimport TempInput from './components/TempInput';\nimport { toCelsius, toFahrenheit, convertTemp } from './helpers/convertTemp';\nimport './App.css';\n\nconst Calculator = _ => {\n  const _useState = useState({\n    scale: 'celsius',\n    temp: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        temp = _useState2[0],\n        setTemp = _useState2[1];\n\n  const celsius = temp.scale === 'fahrenheit' ? convertTemp(temp.temp, toCelsius) : temp.temp;\n  const fahrenheit = temp.scale === 'celsius' ? convertTemp(temp.temp, toFahrenheit) : temp.temp;\n\n  const handleCelciusChange = temp => {\n    setTemp({\n      scale: 'celsius',\n      temp: temp\n    });\n  };\n\n  const handleFahrenheitChange = temp => {\n    setTemp({\n      scale: 'fahrenheit',\n      temp: temp\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"calculator\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Temperature converter\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Enter a temperature value in either Celsius or Fahrenheit to have it automatically converted to the other scale value in real time\"), React.createElement(TempInput, {\n    scale: \"celsius\",\n    temp: celsius,\n    onTempChange: handleCelciusChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(TempInput, {\n    scale: \"fahrenheit\",\n    temp: fahrenheit,\n    onTempChange: handleFahrenheitChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }));\n};\n\nexport default Calculator;","map":{"version":3,"sources":["/Users/dmendoza/Documents/react-projects/temperature-converter-hooks/src/Calculator.js"],"names":["React","useState","TempInput","toCelsius","toFahrenheit","convertTemp","Calculator","_","scale","temp","setTemp","celsius","fahrenheit","handleCelciusChange","handleFahrenheitChange"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAAQC,SAAR,EAAmBC,YAAnB,EAAiCC,WAAjC,QAAmD,uBAAnD;AACA,OAAO,WAAP;;AAEA,MAAMC,UAAU,GAAGC,CAAC,IAAI;AAAA,oBACEN,QAAQ,CAAC;AAACO,IAAAA,KAAK,EAAE,SAAR;AAAmBC,IAAAA,IAAI,EAAE;AAAzB,GAAD,CADV;AAAA;AAAA,QACfA,IADe;AAAA,QACTC,OADS;;AAGtB,QAAMC,OAAO,GAAGF,IAAI,CAACD,KAAL,KAAe,YAAf,GAA8BH,WAAW,CAACI,IAAI,CAACA,IAAN,EAAYN,SAAZ,CAAzC,GAAkEM,IAAI,CAACA,IAAvF;AACA,QAAMG,UAAU,GAAGH,IAAI,CAACD,KAAL,KAAe,SAAf,GAA2BH,WAAW,CAACI,IAAI,CAACA,IAAN,EAAYL,YAAZ,CAAtC,GAAkEK,IAAI,CAACA,IAA1F;;AAEA,QAAMI,mBAAmB,GAAGJ,IAAI,IAAI;AAClCC,IAAAA,OAAO,CAAC;AACNF,MAAAA,KAAK,EAAE,SADD;AAENC,MAAAA,IAAI,EAAEA;AAFA,KAAD,CAAP;AAID,GALD;;AAOA,QAAMK,sBAAsB,GAAGL,IAAI,IAAI;AACrCC,IAAAA,OAAO,CAAC;AACNF,MAAAA,KAAK,EAAE,YADD;AAENC,MAAAA,IAAI,EAAEA;AAFA,KAAD,CAAP;AAID,GALD;;AAOA,SACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0IAFF,EAIE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,IAAI,EAAEE,OAFR;AAGE,IAAA,YAAY,EAAEE,mBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EASE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,YADR;AAEE,IAAA,IAAI,EAAED,UAFR;AAGE,IAAA,YAAY,EAAEE,sBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAiBD,CArCD;;AAuCA,eAAeR,UAAf","sourcesContent":["import React, {useState} from 'react';\nimport TempInput from './components/TempInput';\nimport {toCelsius, toFahrenheit, convertTemp} from './helpers/convertTemp';\nimport './App.css';\n\nconst Calculator = _ => {\n  const [temp, setTemp] = useState({scale: 'celsius', temp: ''});\n\n  const celsius = temp.scale === 'fahrenheit' ? convertTemp(temp.temp, toCelsius) : temp.temp;\n  const fahrenheit = temp.scale === 'celsius' ? convertTemp(temp.temp, toFahrenheit) : temp.temp;\n\n  const handleCelciusChange = temp => {\n    setTemp({\n      scale: 'celsius',\n      temp: temp\n    });\n  }\n\n  const handleFahrenheitChange = temp => {\n    setTemp({\n      scale: 'fahrenheit',\n      temp: temp\n    })\n  }\n\n  return (\n    <div className=\"calculator\">\n      <h2>Temperature converter</h2>\n      <p>Enter a temperature value in either Celsius or Fahrenheit to have it automatically\n      converted to the other scale value in real time</p>\n      <TempInput\n        scale='celsius'\n        temp={celsius}\n        onTempChange={handleCelciusChange}\n       />\n      <TempInput\n        scale='fahrenheit'\n        temp={fahrenheit}\n        onTempChange={handleFahrenheitChange}\n      />\n    </div>\n  )\n};\n\nexport default Calculator;\n"]},"metadata":{},"sourceType":"module"}