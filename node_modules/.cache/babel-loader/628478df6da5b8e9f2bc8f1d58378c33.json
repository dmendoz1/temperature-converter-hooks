{"ast":null,"code":"import _slicedToArray from \"/Users/dmendoza/Documents/react-projects/temperature-converter-hooks/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dmendoza/Documents/react-projects/temperature-converter-hooks/src/Calculator.js\";\nimport React, { useState } from 'react';\nimport TempInput from './components/TempInput';\nimport convertTemp from './helpers/convertTemp';\nimport './App.css';\n\nconst Calculator = _ => {\n  const _useState = useState({\n    scale: 'celsius',\n    temp: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        temp = _useState2[0],\n        setTemp = _useState2[1];\n\n  const celsius = temp.scale === 'fahrenheit' ? convertTemp(temp.temp, toCelsius) : temp.temp;\n  const fahrenheit = temp.scale === 'celsius' ? convertTemp(temp.temp, toFahrenheit) : temp.temp;\n\n  const handleCelciusChange = temp => {\n    setTemp({\n      scale: 'celsius',\n      temp: temp\n    });\n  };\n\n  const handleFahrenheitChange = temp => {\n    setTemp({\n      scale: 'fahrenheit',\n      temp: temp\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"calculator\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Temperature converter\"), React.createElement(TempInput, {\n    scale: \"celsius\",\n    temp: celsius,\n    onTempChange: handleCelciusChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(TempInput, {\n    scale: \"fahrenheit\",\n    temp: fahrenheit,\n    onTempChange: handleFahrenheitChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/dmendoza/Documents/react-projects/temperature-converter-hooks/src/Calculator.js"],"names":["React","useState","TempInput","convertTemp","Calculator","_","scale","temp","setTemp","celsius","toCelsius","fahrenheit","toFahrenheit","handleCelciusChange","handleFahrenheitChange","App"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAO,WAAP;;AAEA,MAAMC,UAAU,GAAGC,CAAC,IAAI;AAAA,oBACEJ,QAAQ,CAAC;AAACK,IAAAA,KAAK,EAAE,SAAR;AAAmBC,IAAAA,IAAI,EAAE;AAAzB,GAAD,CADV;AAAA;AAAA,QACfA,IADe;AAAA,QACTC,OADS;;AAGtB,QAAMC,OAAO,GAAGF,IAAI,CAACD,KAAL,KAAe,YAAf,GAA8BH,WAAW,CAACI,IAAI,CAACA,IAAN,EAAYG,SAAZ,CAAzC,GAAkEH,IAAI,CAACA,IAAvF;AACA,QAAMI,UAAU,GAAGJ,IAAI,CAACD,KAAL,KAAe,SAAf,GAA2BH,WAAW,CAACI,IAAI,CAACA,IAAN,EAAYK,YAAZ,CAAtC,GAAkEL,IAAI,CAACA,IAA1F;;AAEA,QAAMM,mBAAmB,GAAGN,IAAI,IAAI;AAClCC,IAAAA,OAAO,CAAC;AACNF,MAAAA,KAAK,EAAE,SADD;AAENC,MAAAA,IAAI,EAAEA;AAFA,KAAD,CAAP;AAID,GALD;;AAOA,QAAMO,sBAAsB,GAAGP,IAAI,IAAI;AACrCC,IAAAA,OAAO,CAAC;AACNF,MAAAA,KAAK,EAAE,YADD;AAENC,MAAAA,IAAI,EAAEA;AAFA,KAAD,CAAP;AAID,GALD;;AAQA,SACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,IAAI,EAAEE,OAFR;AAGE,IAAA,YAAY,EAAEI,mBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAOE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,YADR;AAEE,IAAA,IAAI,EAAEF,UAFR;AAGE,IAAA,YAAY,EAAEG,sBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAeD,CApCD;;AAsCA,eAAeC,GAAf","sourcesContent":["import React, {useState} from 'react';\nimport TempInput from './components/TempInput';\nimport convertTemp from './helpers/convertTemp';\nimport './App.css';\n\nconst Calculator = _ => {\n  const [temp, setTemp] = useState({scale: 'celsius', temp: ''});\n\n  const celsius = temp.scale === 'fahrenheit' ? convertTemp(temp.temp, toCelsius) : temp.temp;\n  const fahrenheit = temp.scale === 'celsius' ? convertTemp(temp.temp, toFahrenheit) : temp.temp;\n\n  const handleCelciusChange = temp => {\n    setTemp({\n      scale: 'celsius',\n      temp: temp\n    });\n  }\n\n  const handleFahrenheitChange = temp => {\n    setTemp({\n      scale: 'fahrenheit',\n      temp: temp\n    })\n  }\n\n\n  return (\n    <div className=\"calculator\">\n      <h2>Temperature converter</h2>\n      <TempInput\n        scale='celsius'\n        temp={celsius}\n        onTempChange={handleCelciusChange}\n       />\n      <TempInput\n        scale='fahrenheit'\n        temp={fahrenheit}\n        onTempChange={handleFahrenheitChange}\n      />\n    </div>\n  )\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}